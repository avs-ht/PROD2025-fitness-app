/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as TrainImport } from './app/routes/train'
import { Route as NavImport } from './app/routes/_nav'
import { Route as IndexImport } from './app/routes/index'
import { Route as NavSettingsImport } from './app/routes/_nav/settings'
import { Route as NavWorkoutsIndexImport } from './app/routes/_nav/workouts/index'
import { Route as NavSettingsIndexImport } from './app/routes/_nav/settings/index'
import { Route as NavProfileIndexImport } from './app/routes/_nav/profile/index'
import { Route as NavExercisesIndexImport } from './app/routes/_nav/exercises/index'
import { Route as NavWorkoutsAddImport } from './app/routes/_nav/workouts/add'
import { Route as NavProfileRobotImport } from './app/routes/_nav/profile/robot'
import { Route as NavProfileAchievementsImport } from './app/routes/_nav/profile/achievements'
import { Route as NavExercisesAddImport } from './app/routes/_nav/exercises/add'
import { Route as NavWorkoutsIdIndexImport } from './app/routes/_nav/workouts/$id/index'
import { Route as NavExercisesIdIndexImport } from './app/routes/_nav/exercises/$id/index'
import { Route as NavWorkoutsIdEditImport } from './app/routes/_nav/workouts/$id/edit'
import { Route as NavExercisesIdEditImport } from './app/routes/_nav/exercises/$id/edit'

// Create/Update Routes

const TrainRoute = TrainImport.update({
  id: '/train',
  path: '/train',
  getParentRoute: () => rootRoute,
} as any)

const NavRoute = NavImport.update({
  id: '/_nav',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NavSettingsRoute = NavSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => NavRoute,
} as any)

const NavWorkoutsIndexRoute = NavWorkoutsIndexImport.update({
  id: '/workouts/',
  path: '/workouts/',
  getParentRoute: () => NavRoute,
} as any)

const NavSettingsIndexRoute = NavSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NavSettingsRoute,
} as any)

const NavProfileIndexRoute = NavProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => NavRoute,
} as any)

const NavExercisesIndexRoute = NavExercisesIndexImport.update({
  id: '/exercises/',
  path: '/exercises/',
  getParentRoute: () => NavRoute,
} as any)

const NavWorkoutsAddRoute = NavWorkoutsAddImport.update({
  id: '/workouts/add',
  path: '/workouts/add',
  getParentRoute: () => NavRoute,
} as any)

const NavProfileRobotRoute = NavProfileRobotImport.update({
  id: '/profile/robot',
  path: '/profile/robot',
  getParentRoute: () => NavRoute,
} as any)

const NavProfileAchievementsRoute = NavProfileAchievementsImport.update({
  id: '/profile/achievements',
  path: '/profile/achievements',
  getParentRoute: () => NavRoute,
} as any)

const NavExercisesAddRoute = NavExercisesAddImport.update({
  id: '/exercises/add',
  path: '/exercises/add',
  getParentRoute: () => NavRoute,
} as any)

const NavWorkoutsIdIndexRoute = NavWorkoutsIdIndexImport.update({
  id: '/workouts/$id/',
  path: '/workouts/$id/',
  getParentRoute: () => NavRoute,
} as any)

const NavExercisesIdIndexRoute = NavExercisesIdIndexImport.update({
  id: '/exercises/$id/',
  path: '/exercises/$id/',
  getParentRoute: () => NavRoute,
} as any)

const NavWorkoutsIdEditRoute = NavWorkoutsIdEditImport.update({
  id: '/workouts/$id/edit',
  path: '/workouts/$id/edit',
  getParentRoute: () => NavRoute,
} as any)

const NavExercisesIdEditRoute = NavExercisesIdEditImport.update({
  id: '/exercises/$id/edit',
  path: '/exercises/$id/edit',
  getParentRoute: () => NavRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_nav': {
      id: '/_nav'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavImport
      parentRoute: typeof rootRoute
    }
    '/train': {
      id: '/train'
      path: '/train'
      fullPath: '/train'
      preLoaderRoute: typeof TrainImport
      parentRoute: typeof rootRoute
    }
    '/_nav/settings': {
      id: '/_nav/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof NavSettingsImport
      parentRoute: typeof NavImport
    }
    '/_nav/exercises/add': {
      id: '/_nav/exercises/add'
      path: '/exercises/add'
      fullPath: '/exercises/add'
      preLoaderRoute: typeof NavExercisesAddImport
      parentRoute: typeof NavImport
    }
    '/_nav/profile/achievements': {
      id: '/_nav/profile/achievements'
      path: '/profile/achievements'
      fullPath: '/profile/achievements'
      preLoaderRoute: typeof NavProfileAchievementsImport
      parentRoute: typeof NavImport
    }
    '/_nav/profile/robot': {
      id: '/_nav/profile/robot'
      path: '/profile/robot'
      fullPath: '/profile/robot'
      preLoaderRoute: typeof NavProfileRobotImport
      parentRoute: typeof NavImport
    }
    '/_nav/workouts/add': {
      id: '/_nav/workouts/add'
      path: '/workouts/add'
      fullPath: '/workouts/add'
      preLoaderRoute: typeof NavWorkoutsAddImport
      parentRoute: typeof NavImport
    }
    '/_nav/exercises/': {
      id: '/_nav/exercises/'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof NavExercisesIndexImport
      parentRoute: typeof NavImport
    }
    '/_nav/profile/': {
      id: '/_nav/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof NavProfileIndexImport
      parentRoute: typeof NavImport
    }
    '/_nav/settings/': {
      id: '/_nav/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof NavSettingsIndexImport
      parentRoute: typeof NavSettingsImport
    }
    '/_nav/workouts/': {
      id: '/_nav/workouts/'
      path: '/workouts'
      fullPath: '/workouts'
      preLoaderRoute: typeof NavWorkoutsIndexImport
      parentRoute: typeof NavImport
    }
    '/_nav/exercises/$id/edit': {
      id: '/_nav/exercises/$id/edit'
      path: '/exercises/$id/edit'
      fullPath: '/exercises/$id/edit'
      preLoaderRoute: typeof NavExercisesIdEditImport
      parentRoute: typeof NavImport
    }
    '/_nav/workouts/$id/edit': {
      id: '/_nav/workouts/$id/edit'
      path: '/workouts/$id/edit'
      fullPath: '/workouts/$id/edit'
      preLoaderRoute: typeof NavWorkoutsIdEditImport
      parentRoute: typeof NavImport
    }
    '/_nav/exercises/$id/': {
      id: '/_nav/exercises/$id/'
      path: '/exercises/$id'
      fullPath: '/exercises/$id'
      preLoaderRoute: typeof NavExercisesIdIndexImport
      parentRoute: typeof NavImport
    }
    '/_nav/workouts/$id/': {
      id: '/_nav/workouts/$id/'
      path: '/workouts/$id'
      fullPath: '/workouts/$id'
      preLoaderRoute: typeof NavWorkoutsIdIndexImport
      parentRoute: typeof NavImport
    }
  }
}

// Create and export the route tree

interface NavSettingsRouteChildren {
  NavSettingsIndexRoute: typeof NavSettingsIndexRoute
}

const NavSettingsRouteChildren: NavSettingsRouteChildren = {
  NavSettingsIndexRoute: NavSettingsIndexRoute,
}

const NavSettingsRouteWithChildren = NavSettingsRoute._addFileChildren(
  NavSettingsRouteChildren,
)

interface NavRouteChildren {
  NavSettingsRoute: typeof NavSettingsRouteWithChildren
  NavExercisesAddRoute: typeof NavExercisesAddRoute
  NavProfileAchievementsRoute: typeof NavProfileAchievementsRoute
  NavProfileRobotRoute: typeof NavProfileRobotRoute
  NavWorkoutsAddRoute: typeof NavWorkoutsAddRoute
  NavExercisesIndexRoute: typeof NavExercisesIndexRoute
  NavProfileIndexRoute: typeof NavProfileIndexRoute
  NavWorkoutsIndexRoute: typeof NavWorkoutsIndexRoute
  NavExercisesIdEditRoute: typeof NavExercisesIdEditRoute
  NavWorkoutsIdEditRoute: typeof NavWorkoutsIdEditRoute
  NavExercisesIdIndexRoute: typeof NavExercisesIdIndexRoute
  NavWorkoutsIdIndexRoute: typeof NavWorkoutsIdIndexRoute
}

const NavRouteChildren: NavRouteChildren = {
  NavSettingsRoute: NavSettingsRouteWithChildren,
  NavExercisesAddRoute: NavExercisesAddRoute,
  NavProfileAchievementsRoute: NavProfileAchievementsRoute,
  NavProfileRobotRoute: NavProfileRobotRoute,
  NavWorkoutsAddRoute: NavWorkoutsAddRoute,
  NavExercisesIndexRoute: NavExercisesIndexRoute,
  NavProfileIndexRoute: NavProfileIndexRoute,
  NavWorkoutsIndexRoute: NavWorkoutsIndexRoute,
  NavExercisesIdEditRoute: NavExercisesIdEditRoute,
  NavWorkoutsIdEditRoute: NavWorkoutsIdEditRoute,
  NavExercisesIdIndexRoute: NavExercisesIdIndexRoute,
  NavWorkoutsIdIndexRoute: NavWorkoutsIdIndexRoute,
}

const NavRouteWithChildren = NavRoute._addFileChildren(NavRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof NavRouteWithChildren
  '/train': typeof TrainRoute
  '/settings': typeof NavSettingsRouteWithChildren
  '/exercises/add': typeof NavExercisesAddRoute
  '/profile/achievements': typeof NavProfileAchievementsRoute
  '/profile/robot': typeof NavProfileRobotRoute
  '/workouts/add': typeof NavWorkoutsAddRoute
  '/exercises': typeof NavExercisesIndexRoute
  '/profile': typeof NavProfileIndexRoute
  '/settings/': typeof NavSettingsIndexRoute
  '/workouts': typeof NavWorkoutsIndexRoute
  '/exercises/$id/edit': typeof NavExercisesIdEditRoute
  '/workouts/$id/edit': typeof NavWorkoutsIdEditRoute
  '/exercises/$id': typeof NavExercisesIdIndexRoute
  '/workouts/$id': typeof NavWorkoutsIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof NavRouteWithChildren
  '/train': typeof TrainRoute
  '/exercises/add': typeof NavExercisesAddRoute
  '/profile/achievements': typeof NavProfileAchievementsRoute
  '/profile/robot': typeof NavProfileRobotRoute
  '/workouts/add': typeof NavWorkoutsAddRoute
  '/exercises': typeof NavExercisesIndexRoute
  '/profile': typeof NavProfileIndexRoute
  '/settings': typeof NavSettingsIndexRoute
  '/workouts': typeof NavWorkoutsIndexRoute
  '/exercises/$id/edit': typeof NavExercisesIdEditRoute
  '/workouts/$id/edit': typeof NavWorkoutsIdEditRoute
  '/exercises/$id': typeof NavExercisesIdIndexRoute
  '/workouts/$id': typeof NavWorkoutsIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_nav': typeof NavRouteWithChildren
  '/train': typeof TrainRoute
  '/_nav/settings': typeof NavSettingsRouteWithChildren
  '/_nav/exercises/add': typeof NavExercisesAddRoute
  '/_nav/profile/achievements': typeof NavProfileAchievementsRoute
  '/_nav/profile/robot': typeof NavProfileRobotRoute
  '/_nav/workouts/add': typeof NavWorkoutsAddRoute
  '/_nav/exercises/': typeof NavExercisesIndexRoute
  '/_nav/profile/': typeof NavProfileIndexRoute
  '/_nav/settings/': typeof NavSettingsIndexRoute
  '/_nav/workouts/': typeof NavWorkoutsIndexRoute
  '/_nav/exercises/$id/edit': typeof NavExercisesIdEditRoute
  '/_nav/workouts/$id/edit': typeof NavWorkoutsIdEditRoute
  '/_nav/exercises/$id/': typeof NavExercisesIdIndexRoute
  '/_nav/workouts/$id/': typeof NavWorkoutsIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/train'
    | '/settings'
    | '/exercises/add'
    | '/profile/achievements'
    | '/profile/robot'
    | '/workouts/add'
    | '/exercises'
    | '/profile'
    | '/settings/'
    | '/workouts'
    | '/exercises/$id/edit'
    | '/workouts/$id/edit'
    | '/exercises/$id'
    | '/workouts/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/train'
    | '/exercises/add'
    | '/profile/achievements'
    | '/profile/robot'
    | '/workouts/add'
    | '/exercises'
    | '/profile'
    | '/settings'
    | '/workouts'
    | '/exercises/$id/edit'
    | '/workouts/$id/edit'
    | '/exercises/$id'
    | '/workouts/$id'
  id:
    | '__root__'
    | '/'
    | '/_nav'
    | '/train'
    | '/_nav/settings'
    | '/_nav/exercises/add'
    | '/_nav/profile/achievements'
    | '/_nav/profile/robot'
    | '/_nav/workouts/add'
    | '/_nav/exercises/'
    | '/_nav/profile/'
    | '/_nav/settings/'
    | '/_nav/workouts/'
    | '/_nav/exercises/$id/edit'
    | '/_nav/workouts/$id/edit'
    | '/_nav/exercises/$id/'
    | '/_nav/workouts/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NavRoute: typeof NavRouteWithChildren
  TrainRoute: typeof TrainRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NavRoute: NavRouteWithChildren,
  TrainRoute: TrainRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_nav",
        "/train"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_nav": {
      "filePath": "_nav.tsx",
      "children": [
        "/_nav/settings",
        "/_nav/exercises/add",
        "/_nav/profile/achievements",
        "/_nav/profile/robot",
        "/_nav/workouts/add",
        "/_nav/exercises/",
        "/_nav/profile/",
        "/_nav/workouts/",
        "/_nav/exercises/$id/edit",
        "/_nav/workouts/$id/edit",
        "/_nav/exercises/$id/",
        "/_nav/workouts/$id/"
      ]
    },
    "/train": {
      "filePath": "train.tsx"
    },
    "/_nav/settings": {
      "filePath": "_nav/settings.tsx",
      "parent": "/_nav",
      "children": [
        "/_nav/settings/"
      ]
    },
    "/_nav/exercises/add": {
      "filePath": "_nav/exercises/add.tsx",
      "parent": "/_nav"
    },
    "/_nav/profile/achievements": {
      "filePath": "_nav/profile/achievements.tsx",
      "parent": "/_nav"
    },
    "/_nav/profile/robot": {
      "filePath": "_nav/profile/robot.tsx",
      "parent": "/_nav"
    },
    "/_nav/workouts/add": {
      "filePath": "_nav/workouts/add.tsx",
      "parent": "/_nav"
    },
    "/_nav/exercises/": {
      "filePath": "_nav/exercises/index.tsx",
      "parent": "/_nav"
    },
    "/_nav/profile/": {
      "filePath": "_nav/profile/index.tsx",
      "parent": "/_nav"
    },
    "/_nav/settings/": {
      "filePath": "_nav/settings/index.tsx",
      "parent": "/_nav/settings"
    },
    "/_nav/workouts/": {
      "filePath": "_nav/workouts/index.tsx",
      "parent": "/_nav"
    },
    "/_nav/exercises/$id/edit": {
      "filePath": "_nav/exercises/$id/edit.tsx",
      "parent": "/_nav"
    },
    "/_nav/workouts/$id/edit": {
      "filePath": "_nav/workouts/$id/edit.tsx",
      "parent": "/_nav"
    },
    "/_nav/exercises/$id/": {
      "filePath": "_nav/exercises/$id/index.tsx",
      "parent": "/_nav"
    },
    "/_nav/workouts/$id/": {
      "filePath": "_nav/workouts/$id/index.tsx",
      "parent": "/_nav"
    }
  }
}
ROUTE_MANIFEST_END */
